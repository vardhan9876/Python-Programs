# -*- coding: utf-8 -*-
"""Basic python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BMW814ahQbEIeW2YWNNt3AtTw3gZ3NCO
"""

print('Hello World')

"""Python Pratice

Variable Declaration
"""

a=5
print(a)

"""Operators

1. Arithmatic Operator
"""

a=5
b=10
c=a+b  # Addition
d=a-b  # Subtraction
e=a*b  # Multiplication
f=a/b  # Division
print(c)
print(d)
print(e)
print(f)

a=2
b=3
c=a%b  #Modules
d=a//b  #floor
e=a**b  # Exponent
print(c)
print(d)
print(e)

"""2.Relational Operators"""

a=5
b=8
c=a>b
d=a<b
e=a>=b
f=a<=b
g=a==b
h=a!=b
print(c)
print(d)
print(e)
print(f)
print(g)
print(h)

"""Assignment Operators"""

a=5
b=8
a==b
print(a)
a+=b
print(a)
a-=b
print(a)
a*=b
print(a)
a//=b
print(a)
a**=b
print(a)

"""Logical Operators"""

a=4
b=3
print(a>5 and b<=3) # and operator

a=-1
b=5
print(not a)  # not operator

a=0
b=2
print(not a)  #Not operator
print(not b)

a=3
b=7
print(a<3 or b>5) # or operator

"""Membership Operator [ in, not in]"""

a=['orange', 'Banana', 'Apple']
 print('Apple' in a)  # in

a=[10,20,30,50]
print(10 not in a)   # Not in

"""Identity Operator [ is, is not ]"""

a=15
b=10
print(a is b)   # using is operator
print(a==b)

print(a is not b)  # using is not operator

"""Bitwise Operator [|, &, ~, ^, >>, << ]"""

a=15
b=12
print(a|b)
print(a & b)
print(a^b)
print(a>>b)
print(a<<b)

"""DataTypes"""

a=2
type(a)  # int

b=2.0
type(b) #float

c='Vishnu'
type(c)   # str

d=2+5j
e=5+3j
print(d+e)

type(d) #complex

"""**Eval() Function** : It allows all types of values and converts into corresponding datatype"""

x=eval(input('Enter first number :'))

print(x)
type(x)

"""Conditional Statements"""

marks=int(input("Enter a marks"))
if marks<=25:
  print('F')
elif marks>25 and marks<=45: #ex: 25<marks<=10 /operator Changing
  print('E')
elif marks>45 and marks<=50:
  print('D')
elif marks>50 and marks<=60:
  print('C')
elif marks>60 and marks<80:
  print('B')
elif marks>=80 :
  print('A')

"""Square  or not"""

len=int(input("enter a length"))
bre=int(input("enter a breadth"))
if len==bre :
  print("Square")
else :

  print("Not a Square")

"""Greatest Number of two variables"""

a=int(input("Enter a Number "))
b=int(input("Enter a Number "))
if a<b:
  print(b)
else:
  print(a)

"""Largest Number of three variables"""

a,b,c=int(input()),int(input()),int(input())

if (a>=b) and (a>=c):
  print(a)
elif (b>=a) and (b>=c):
  print(b)
else:
  print(c)

"""Check postive or Negative Or Zero"""

n=int(input())

if n>0 :
  print("Postive Number")
elif n<0 :
  print("Negative Number")
else :
  print("Zero")

"""Check eliglible for Vote"""

age=int(input())

if(age>=18):
  print("Eligiable for vote")
else :
  print("Not Eligiable for vote")

"""Check Leap year or Not"""

year=int(input())

if(year%4==0 and year%100!=0 or year%400==0):    # (year%4==0 and year%100==0 and year%400==0)
  print("Leap Year")
else:
  print("Not a Leap Year")

"""Create a program that asks the user to enter a temperature in celsius and converts  it to Fahrenheit if the input is greater than zero;otherwise, it converts it to kelvin."""

celsius = int(input())

if (celsius>0) :
   Fahernheit = (celsius*(5/9))+32
   print(str(Fahernheit)+" F")
else :
  Fahernheit=celsius+273
  print(str(Fahernheit)+ "K")

"""Check the string is Palindrome or not"""

x='malayalam'
y=""
for i in x :
  y=i+y
if(x==y) :
  print("Palindrome")
else :
  print("Not Palindrome")

"""Palindrone with Number"""

num = 101
temp = num
reverse_num = 0
while temp != 0:
   digit = temp % 10
   reverse_num = (reverse_num * 10) + digit
   temp //= 10
if num == reverse_num:
   print(num, "is a palindrome number")
else:
   print(num, "is not a palindrome number")

"""Password"""

pas=input()
def isPass(pas):
  cond1 =len(pas)>8
  upper=False
  lower=False
  punc=False
  for val in pas:
    if val.isupper():
      upper=True
      break
  for val in pas:
    if val.islower():
      lower=True
      break
  for val in pas:
    punc="'!@#$%^&*()><'"
    if val in punc:
      punc=True
      break
  return cond1 and upper and lower and punc
if isPass(pas):
      print("pasword is valid")
else :
  print("Password is not Valid")

"""Lets Build a Python Program, to represent ATM Transaction, where a User has to choose input from the options displayed on the Screen. The available options on the Screen include operations such as Withdraw, deposit, balance.

Following are the basic operations available in the ATM

Withdraw
Deposit
Check Balance
Exit
Approach to each Option

A. Withdraw:
Take the amount user desires to withdraw as input.
If the balance amount greater than or equal to the withdrawal amount then Perform the transaction and give the user the desired amount.
Else print Insufficient Funds message.
B. Deposit:

Take the amount user desires to deposit as input.
Add the received input from the user to balance and update its value.
balance = balance + deposit.
Print a message on screen stating deposit transaction has been successful.
C. Check Balance:

Print a message on screen showing the value of balance amount.
D. Exit:

"""

Initialised_pin=12345
Pin=int(input('Enter the pin'))

def Atm_transaction():
  min_balance=1000
  balance=10000
  while True:
    choice=int(input('''Please choose any one option
    1. Withdraw_amount
    2. Deposit_amount
    3. Balance_amount
    4. Exit
    '''))
    if choice==1:
      amount=int(input('Enter the Withdraw_amount'))
      if amount>0:
        balance -= amount
        if balance<min_balance:
          print('Insufficent balance, Please Deposit amount')
        else:
            print("Withdraw_amount is Successful, balance amount={}".format(balance),)
      else:
        print('Enter amount is positive value')

    elif choice==2:
       amount=int(input('Enter the Deposit_amount'))
       if amount>0:
         balance += amount

         print(f'Deposit_amount is succesful balance={balance}')
       else:
        print('Enter amount is positive value')

    elif choice==3:
              print('user balance amount is {}'.format(balance))

    elif choice==4:
              return None
    else:
              print('please choose in the following options')


if Pin==Initialised_pin :
    Atm_transaction()

# Check Even or Odd Number

Num=int(input('Enter a number'))

if Num%2==0:
   print('Even Number')
else :
  print('Odd Number')

# Check a Prime Number or Not

Num=int(input('Enter a Number'))

if (Num%2==1):
  print('Prime Number')
else:
  print('Not a Prime ')

# Electricity Bill problems
#     units                 price
#     below 100                   no charge
#     next 100                   5 per unit
#     above 200                  10 per unit


amount=0
num=int(input('enter a electricity bill in units'))

if num<100 :
  amount=0
  print(amount)
elif 100<num<200 :
  amount=(num-100)*5
  print(amount)
elif num>200 :
  amount=500+(num-200)*10
  print(amount)

# write a program to accept two numbers and mathematical operator accordingly opertors
# ex : n1= 2, n2= 10 op='-'  op=-8

n1=int(input("enter a n1 "))
n2=int(input('enter a n2 '))

operator= input("Enter a Mathematical operator")

if operator=='+' :
  print('result is ', n1+n2)
elif operator== '-' :
  print('result is ', n1-n2)
elif operator== '*' :
  print('result is ', n1*n2)
elif operator== '%' :
  print('result is ', n1%n2)
elif operator== '//' :
  print('result is ', n1//n2)
elif operator== '**' :
  print('result is ', n1**n2)
else :
  print('Not Matched !')

# check wheather triangle is possible or not

s1=int(input('enter a s1 '))
s2=int(input('enter a s2 '))
s3=int(input('enter a s3 '))

if s1+s2>s3 and s2+s3>s1 and s1+s3>s2 :
  print('Triangle is possible')
else :
  print('Triangle is not possible')

"""
**Looping Statements**

    1. While Loop : we can execute a set of statements as long as a condition is true.

    2. for Loop : loop we can execute a set of statements, once for each item in a list, tuple, set etc.
    
**Key words**

  ....> break : we can stop the loop even if the while condition is true

  ....> continue :we can stop the current iteration, and continue with the next.

  ....> range() a set of code a specified number of times, we can use the range() function"""

#Syntax of while loop
#  intilisation          i=1
#  condition      while i<5 :
#  increment       i +=1

#Example:

i=0            # intilisation
while i<=5 :   # condition
  print(i)
  i+=1          # increment/decrement

# using break

i = 1
while i <=5:
  print(i)
  if i == 3:
    break
  i += 1

#using continue

i=0
while i<5 :
  i +=1
  if i==2 :
    continue
    print(i)

#using range()

i=1
for i in range(2,6):
  print(i)

# using range() in string

colour =['red','orange','green']

for x in colour:
  print(x)

# write a for loop that prints the number from 1 t0 10.

n=1
for n in range(1,10):
  print(n)

# write a for loop that prints the even numbers fron 1 to 20

n=1
for n in range(1,20):
    if n%2==0:
       print(n)

# write a for loop that calculate sum of all numbers from 1 to 100

sum=1
for i in range(100):
  sum = sum +i
print(sum)

#write a for loop that iterates over a list of names and print each name on a seperate line

fruits=["apple","Banana","carrot"]

for x in fruits:
  print(x)

# iterate each character in a string

fruits=["orange"]

for x in "orange":
  print(x)

# product of all numbers

product=1

for i in range(1,6):    # 1*2*3*4*5=120
  product = product*i

print(product)

"""**Pattern Program**"""

# 1. Square pattern using *
for i in range(1,6):
  for j in range(1,6):
    print('*',end=' ')

  print()

print('****************************************')

#  using Numbers

for i in range(1,6):
  for j in range(1,6):
    print(i,end=' ')

  print()

# 2. Right angle triangle using *

for i in range(1,6):
  for j in range(i):
    print('*',end=' ')

  print()


print('****************************************')

# 3. using Numbers

for i in range(1,6):
  for j in range(i):
    print(i,end=' ')

  print()

# 4. inverted right angled triangle
for i in range(5,0,-1):
  for j in range(i):
    print(j,end=' ')

  print()

print('#####################################')
  # single for loop

for i in range(5,0,-1):
  print('* '*i)

# 5. odd number using *

for i in range(1,10):
  for j in range(i):
    if i%2!=0:
      print('*',end='')

  print()


print('=========================================')
# Using even

for i in range(1,10):
  for j in range(i):
    if i%2==0:
      print('*',end='')

  print()

var="python"
for i in var:
  if i=='t' or i=='n':
    continue
  print(i)

size=7
m=(2*size)-2
for i in range(0,size):
    for j in range(0,m):
        print(end=" ")
  # decrementing m  after each loop
    m=m-1
    for j in range(0,i+1):
         print('*',end=' ')
    print(" ")

size = 7
m = (2 * size) - 2
for i in range(0, size):
    for j in range(0, m):
        print(end=" ")
    # incrementing m after each loop
    m = m + 1
    for j in range(0, i + 1):
        print("*", end=' ')
    print(" ")

rows = int(input("Enter a size "))
for i in range(0, rows):
    for j in range(0, i + 1):
        print(i+1, end=' ')
    print(" ")

for i in range(rows + 1, 0, -1):
    for j in range(0, i - 1):
        print(i-1, end=' ')
    print(" ")

# using alphabets
#https://www.tutorialstonight.com/python/alphabet-pattern-programs-in-python
#https://www.w3resource.com/python-exercises/python-basic-exercise-86.php
#ASCII values from 65=A to 90=Z (Capital letters), 97=a to 122=z(Lower letters)
# square alphabet pattern

size = 5
count = 0

for i in range(size):
    for j in range(size):
        print(chr(65 + count), end=" ")
        # changing charater
        count += 1
    print()

size=5
count=0

for i in range(size):
  for j in range(i):
    print(chr(65+count) ,end='')

    count+=1

  print()

# right pascal triangle
n = 5

# upper triangle
for i in range(n):
    for j in range(i + 1):
        print(chr(65 + j), end="")
    print()
# lower triangle
for i in range(n):
    for j in range(n - i - 1):
        print(chr(65 + j), end="")
    print()

size=int(input('Enter a size'))


for i in range(size):
  for j in range(i+2):
    print(chr(65+j), end='')



  print()

size=5

for i in range(5):
  for j in range(i+1):
    print(chr(69-j), end='')

  print()

rows = int(input("Enter a size "))
for i in range(0, rows):
    for j in range(0, i + 1):
        print(i+1, end=' ')
    print(" ")

for i in range(rows + 1, 0, -1):
    for j in range(0, i - 1):
        print(j+1, end=' ')
    print(" ")
for i in range(rows + 1, 0, -1):
    for j in range(0, i -1):
        print(i+1, end=' ')
    print(" ")

for i in range(0, rows):
    for j in range(0, i+1):
        print(j+1, end=' ')
    print(" ")

# 3 Table in prattern

n=3

for i in range(1,11):
  print(n,'x',i,'=',n*i )

print()

# using user input

n=int(input('Enter a number: '))

for i in range (1,11):
  print(n,'x',i,'=',n*i)

print()

"""1. Palindrome Number:
              sequence of words that reads the same backwards as forwards e.g. "SOLOS","madam",1001....etc.
"""

#Write a Python program that takes a user input and checks if it is a palindrome (reads the same forwards and backwards).
# function which return reverse of a string

def isPalindrome(s):
	return s == s[::-1]

s = "101"
ans = isPalindrome(s)

if ans:
	print("Yes")
else:
	print("No")

print("#######################################")

# Python program to check
# if a string is palindrome
# or not

x = "MADAM"

w = ""
for i in x:
	w = i + w

if (x == w):
	print("Yes")
else:
	print("No")
print("#######################################")

"""2. Fibonacci series :"""

for even_numbers in range(0,10,2):
  print(even_numbers,end=' ')

n = int(input("Enter a number: "))
i = 0

while i <= n:
    if i % 2 == 0:
        print(i, end=" ")
    i = i + 1

str1="welcome to python"

print(str1)
print(str1[4])
print(str1[0:])
print(str1[:9])
print(str1[2:5])
print(str1[8:2])
print(str1[::-1])
print(str1[::-4])
print(str1, end='', sep=' ')

var="python is a high level programming langauage"
vowels=('a','i','e','o','u')

print(var.count('a'))

#Write a Python program that takes a user input and counts the number of vowels (a, e, i, o, u) in the input string.
vowels='aieou'
st=input('enter a string :')

#flag= False

for i in range(len(vowels)):
   count=st.count(vowels[i])
   #print('count of{}={}'.format(vowels[i]),count)
   print(vowels[i],count)

print("====================")

count=0
for i in range(len(st)):
  if st[i] in vowels:
    count+=1
print(count)

"""String Methods :"""

st="malayalam is the langauage"
print(st.capitalize())# capitalize(): converts first character in a entire string to uppercase.

print(st.casefold())# casefold(): converts first character in a entire string to lowercase.

st='Python is programming langauage'
print(st.count('a')) # count: returns number of times a specified value occurs in a string.
print(st.count('g'))

st="venkatesh is good boy"
print(st.find('o')) # find(): searches the string for a specified value and returns the position of it found.

print(st.rfind("o")) # rfind(): returns the position from right to where it found.

print(st.index('a')) # index(): returns the position of element.

print(st.rindex('g'))# rindex():same as rfind method ,but if we given element is not there in a string it shows value error.

st='skill cOLlege stReNgth '

print(st.lower())  # lower(): convert string into lower case.

print(st.upper())  # upper(): convert string into uppercase.

print(st.swapcase()) # swapcase(): convert the string into lower to upper case (or) upper to lowercase.

print(st.title())   # title(): convert first character of all the words in string to uppercase., but  capitalize method copy the entire string into once.

st='String is immutable'

print(st.split()) # split(): splits the string at the specified separator and returns a list and split left side from last character.

langs = 'C,Python,R,Java,SQL,Hadoop'
print(langs.rsplit(',', 3))

fruits = 'apples$banana$mango$fig$pear'          # rsplit():  splits the string at the specified separator and returns a list and split  right side from first character.

print(fruits.rsplit('$', 2))

langs = 'C,Python,R,Java,SQL,Hadoop'
print(langs.split(',', 3))
#using split()
fruits = 'apples$banana$mango$fig$pear'
print(fruits.split('$', 2))

langs = '  C,Python,R,  Java,SQL,Hadoop      '  # strip(): removes the whitespaces or trimmed version of the string.
print(langs.strip())

fruits = '$2apples, banana, mango, fig$pear           ' # rstrip(): removes the white spaces or characters from end of the string.
print(fruits.rstrip())

# join() : joins the elements of an iterable to the end of the string. without using concatination of the string.

v1='python'
v2='is'
v3='programming language'
print('_'.join([v1,v2,v3]))

# using isalpha(): returns the alphabets in the string

var='@78Vishnuvardhan$3R'

for i in var:
  if i.isalpha():
    print(i,end='')

# Write a Python program that takes a user input and checks if it is a valid password (contains at least one uppercase letter, one lowercase letter, and one digit)
password=input('enter a password :')

lower_count=0
upper_count=0
special_count=0
numeric_count=0

for i in password:
  if i.islower():
    lower_count +=1
  elif i.isupper():
    upper_count +=1
  elif i.isdigit():  # or elif i.isnumeric():
    numeric_count +=1
  else :
    special_count +=1

if((len(password)>=10) and lower_count>=1 and upper_count>=1 and numeric_count>=1 and special_count>=1):
  print('Password is valid')
else :
  print('Password is Invalid')

var='@78Vishnuvardhan$3R'
print(var.isascii())

#Write a Python program that takes a user input and prints the length of the input string.
s=input('enter a string :')
print(len(s))

#Write a Python program that takes a user input and prints the input string in uppercase.
s=input('enter a string :')
print(s.upper())

var='@78Vishnuvardhan$3R'
print(var.isnumeric())

#Write a Python program that takes a user input and checks if it contains only numeric characters
var=input('enter a string')

for i in var:
  if i.isdigit():
  #if i.isnumeric():
    print(i,end='')

#Write a Python program that takes a user input and prints the reversed version of the input string.

#s='python programming'
s=input('enter a input: ')
print(s[::-1])

#Write a Python program that takes a user input of a sentence and capitalizes the first letter of each word.

s=input('enter a sentence:')

print(s.title())

#Write a Python program that takes a user input and checks if it is a valid email address (contains "@" and ".").
#s="vishnupalasani162@gmail.com"
s=input('enter a email address: ')
if ('@' in s and '.' in s):
   print('valid email address')
else:
  print('invalid email address')

#Write a Python program that takes a user input and replaces all occurrences of a specific character with another character.
s=input('enter a string:')
sp=input('enter a sp character: ')
ac='@'
print(s.replace(sp,ac))

"""Lists:"""

# 1. Write a Python program that takes a list of numbers as input and prints the sum of all the numbers.

list=[1,2,3,4,5]
sum=0
for i in range(0,6-1):
  sum=sum+list[i]
print("sum of all numbers",sum)

# 2.Write a Python program that takes a list of strings as input and prints the concatenation of all the strings.

list1=['python','list','is','muttable']
list2=['but','strings','are','imutable']
list=list1+list2
print(list)

#3. Write a Python program that takes a list of numbers as input and prints the largest number in the list.

list=[12,34,2,5,7,193,194, 456]
print(max(list))

#4. Write a Python program that takes a list of strings as input and prints the shortest string in the list.

list=[12,34,2,5,7,193,194, 456]
print(min(list))

#5. Write a Python program that takes a list of numbers as input and prints a new list with only the even numbers.

list=[1,2,3,4,5,6,7,8,9,10]
list1=[]

for i in list:
  if i%2==0:
    list1.append(i)
print(list1)

#6. Write a Python program that takes a list of strings as input and prints a new list with only the strings that have more than 5 characters.

#7. Write a Python program that takes a list of numbers as input and prints a new list with the numbers squared.

list=[1,2,3,4,5,6,7,8,9,10]
list1=[]
for i in list:
  if i<=10:
    list1.append(i**2)
print(list1)

#8. Write a Python program that takes a list of strings as input and prints a new list with the strings reversed.

#9. Write a Python program that takes a list of numbers as input and prints the average of all the numbers.

list=[1,2,3,4,5,6,7,8,9,10]
avg=sum(list)/len(list)

print(avg)

"""Dictionary:"""

Dict={1:'A',2:'B', 3:'C'}
print(Dict)

print('************************')

Dict=dict([('name','vishnu'),('age',20)])
print(Dict)

print('************************')

# nested dictionary

dict1={'name':{1:[1,2,3,4,5]}}
print(dict1)
print(dict1['name'][1])
print(dict1['name'][1][3])

# get(): returns the value for a key.if exsits dictionary else none
dict1={'name':{1:[1,2,3,4,5]}}
print(dict1.get('name'))

# values() : returns list of values in dictionary

dict1={1:1,2:4,3:9}
print(dict1.values())

#update():morethan 2 keys:value can be update the prevuious given value and update the used dictionary
dict1={1:5,2:10,3:15,4:20}
print(dict1.items())

#keys(): returns a list of keys in dictionary

dict1={1:1,2:4,3:9}
print(dict1.keys())

#items(): returns a list of tuples containing a key values pair

dict1={1:5,2:10,3:15,4:20}
print(dict1.items())

dict1 = {1: "Python", 2: "Java", 3: "Ruby", 4: "Scala"}

# copy() method
dict2 = dict1.copy()
print(dict2)

# clear() method
dict1.clear()
print(dict1)

# get() method
print(dict2.get(1))

# items() method
print(dict2.items())

# keys() method
print(dict2.keys())

# pop() method
dict2.pop(4)
print(dict2)

# popitem() method
dict2.popitem()
print(dict2)

# update() method
dict2.update({3: "Scala"})
print(dict2)

# values() method
print(dict2.values())

var='python programming'
empty_dict={}
for i in var:
  if i in empty_dict:
    value=empty_dict.get(i)
    empty_dict[i]=value+1
  else:
    empty_dict[i]=1
print(empty_dict)

#Convert two lists into a dictionary?

keys=[1,2,3,4]
values=['john','ram','vikas','reddy']
res_dict=dict(zip(keys,values))
print(res_dict)

#Merge two Python dictionaries into one

dict1={1:'one',2:'two',3:'three'}
dict2={4:'four',5:'five',6:'six'}

#dict3 = {**dict1, **dict2}
dict3=dict1|dict2

print(dict3)

print('*****************')

a = {"James": 95, "Jane": 98}
b = {"Matt": 85, "Ashely": 90, "James": 100}
c = a | b
print(c)

dict = {'0':1, '1':2, '2':3}
x = input("Enter value to check ")

if x in dict.keys():
    print(True)
else:
    print(False)

a={'john':85,'balu':69,'cherry':99}

print(a.keys())
print(a.values())
print(a.get('balu'))
print(a.items())
print(a.copy())
print(a.pop('balu'))

"""Sets:"""

# creating sets

s={1,2,3,4,5,6}  # 1st method
print(s)

print('By using built-in : ')

s=set((1,2,3,4,5,6))
print(s)

print('Empty_set:')

# Empty-set=set()

# set_Methods:

#1. add(): to add a single element into set

s1={1,2,4,6,7}
s1.add(5)
print(s1)

# udate(): to combine two sets into a single set

s1={1,2,3,5,6}   #  modifing the set
s2={1,2,4,6,8}
s1.update(s2)
print(s1)

#union(): create using by combination of two sets
s1={1,2,3,5,6}
s2={1,2,4,6,8}
s3=s1.union(s2)    # create new set
print(s3)

# intersection(): common element will be taken b/w two sets
s1={1,2,3,5,6}
s2={1,2,4,6,8}
s3=s1.intersection(s2)
print(s3)            # create a new set

print('Intersection_update(): it will modify the set')
s1={1,2,3,5,6}
s2={1,2,4,6,8}
s1.intersection_update(s2)
print(s1)

#Symmetric_difference(): it is used for printing two sets without duplicate

s1={1,2,3,5,6}
s2={1,2,4,6,8}
s3=s1.symmetric_difference(s2)
print(s3)

print('symmetric_difference_update()')

s1={1,2,3,5,6}
s2={1,2,4,6,8}
s1.symmetric_difference_update(s2)
print(s1)

# difference(): only setA unique values will be printed

s1={1,2,3,565,2,2,6}
s3={9,7,84}
s2=s1.difference(s3)
print(s2)

s1={1,2,3,565,2,2,6}
s2={9,7,8}
s1.difference_update(s2)
print(s1)

